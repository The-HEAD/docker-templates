######################
## global variables

global:
  checkNewVersion: true
  sendAnonymousUsage: false

######################
## API configuration

api:
  dashboard: true
  insecure: false
  debug: true

######################
## entrypoint into traefik

entryPoints:
  http:
    address: :80
    http:
      redirections:
        entryPoint:
          to: https
  https:
    address: :443
    http:
      middlewares:
        - middlewares-secure-headers@file
      tls:
        options: tls-opts@file
        certResolver: letsencrypt
  traefik:
    address: :8080

######################
## providers (docker / files)

providers:
  docker:
    endpoint: "unix:///var/run/docker.sock"
    # endpoint: "tcp://socket-proxy:2375" # Use this instead of the previous line if you have socket proxy.
    watch: true
    exposedByDefault: false
    defaultRule: Host(`{{ index .Labels "com.docker.stack.namespace"}}.{{env "DOMAINNAME"}}`)   # For Docker Swarm - Autodiscover new services with Traefik Label
    # defaultRule: Host(`{{ index .Labels "com.docker.compose.service"}}.{{env "DOMAINNAME"}}`) # For Docker Compose - Autodiscover new services with Traefik Label
    network:
      - network_traefik_proxy
  file:
    directory: /configurations
    watch: true

######################
## logfile settings

log:
  filePath: /log/traefik.log
  format: text
  level: WARN    # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC

accessLog:
  filePath: /log/access.log
  bufferingSize: 100
  filters:
    statusCodes:
      - "204-299"
      - "400-499"
      - "500-599"

######################
## certificate settings

certificatesResolvers:
  letsencrypt:
    acme:
      email: timo.aretz@gmx.de
      storage: /acme.json
      keyType: EC384
      httpChallenge:
        entryPoint: http
